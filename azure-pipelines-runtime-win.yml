variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

# pool:
#   vmImage: vs2017-win2016
pool: MyWinPool

trigger:
  batch: true
  branches:
    include:
      - master-runtime
# pr:
#   - master-runtime

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: 14.x
  - task: geeklearningio.gl-vsts-tasks-yarn-dev.yarn-installer-task.YarnInstaller@3
    displayName: Install Yarn
    inputs:
      versionSpec: 1.22.x
      checkLatest: true
      includePrerelease: false
  - task: Cache@2
    displayName: Cache Yarn packages
    inputs:
      key: 'yarn | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
      path: $(YARN_CACHE_FOLDER)
  - bash: |
      /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      echo ">>> Started xvfb"
    displayName: Start virtual framebuffer server
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))
  - script: yarn --frozen-lockfile
    displayName: yarn install
    env:
      DISPLAY: ':99.0'
  - script: yarn package:with_runtime --win
    displayName: yarn package
  - script: yarn run publish:qiniu
    displayName: yarn publish
    workingDirectory: ./src
